@import "navbar", "variables", "slider";
/* import ile style.scss icerisinde olan bazi kodlari(suanda _variables.scss ve _navbar.scss, _slider icerisinde) cagiriyoruz._*/


/*********Degiskenleri tanimladik************/


.container {
    margin: 0 auto;
    width: 80%;
    background-color: burlywood;
}


@mixin kutu($kutuRengi) {
    background-color: $buttonRengi;
    color: $kutuRengi;

    width: 20%;
    height: 200px;
    margin: 10px;
    border: $borderRengi;
    border-radius: 10px;
    padding: 10px;

}

.article {

    .articles {
        display: flex;

        .article1 {

            width: 50%;
            height: 200px;
            background-color: gray;
            border: $borderRengi;
            border-radius: 10px;
            padding: 10px;
        }

        .article2 {
            @extend .article1;
            /* extend komutuyla yukarida tanimlanan .article1'in komutlarini direk olarak burada kullandik
            ve isterse bu özelliklerden bazilarini burada tekrar yazarak degistirebiliriz.*/

            background-color: gold;


        }

    }
}




.content {

    .cards {
        display: flex;

        .card1 {

            @include kutu(black);
        }

        .card2 {

            @include kutu(white);
        }

        .card3 {
            @include kutu(cadetblue);
        }

        .card4 {
            @include kutu(#247482)
        }
    }
}


$test:3;

.footer {

    @if $test>3 {
        background-color: brown;
    }

    @else if $test<3 {
        background-color: greenyellow;
    }

    @else {
        background-color: pink;
    }
}


// FOR LOOP / DÖNGÜSÜ

.socialBoxes {

    @for $i from 1 through 6 {

        .social#{$i} {
            width: 10%;
            height: 20px + ($i*15);
            // her döngüde height'i 15 artir!

            $renk: ($i+5)*20;
            // renk 5*20= rgb (120,140,160)
            // sonra ki renkler i ikinci döngüde 2 oluyor ve 2+5=7*20= 140
            // 8*20= 160*

            background-color: rgb($renk, $renk, $renk);
            margin: 2px+($i*2);
        }
    }
}


// ------EACH LOOP /Döngüsü-------



$themaRengi:("pink":rgb(190, 111, 111),
    "red": rgb(255, 5, 5),
    "orange":rgb(222, 107, 13));


@each $i,
$renk in $themaRengi {
    .container {
        &.#{$i} {
            background-color: $renk // for döngüsü gibi, yukarida ki renkleri style.css icerisinde class olarak ayri ayri olusuturuyor.
                // Ve bu olusturulan classlar tek baslarina da diger classlarin sonunda veya basinda kullanilabilirler.
                // style.css dosyasinin icerisinde bu olusturulan renkleri görebilirsin. 129-138
        }
    }
}

// ------ARRAY-----DIZI, Liste-----

$renkler:#004356,
#990000,
#005500,
#456789,
#121456,
#145e13,
#546773;

@for $i from 1 to length($renkler) {
    .social1#{$i} {
        background-color: nth($renkler, $i);
    }
}